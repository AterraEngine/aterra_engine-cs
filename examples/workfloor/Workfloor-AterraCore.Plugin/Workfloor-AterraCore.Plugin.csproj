<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <RootNamespace>Workfloor_AterraCore.Plugin</RootNamespace>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    </PropertyGroup>
    
    <ItemGroup>
        <ProjectReference Include="..\..\..\src\engine\AterraCore.Attributes\AterraCore.Attributes.csproj" />
        <ProjectReference Include="..\..\..\src\engine\AterraCore.Common\AterraCore.Common.csproj" />
        <ProjectReference Include="..\..\..\src\engine\AterraCore.Contracts\AterraCore.Contracts.csproj" />
        <ProjectReference Include="..\..\..\src\engine\AterraCore.OmniVault.Assets\AterraCore.OmniVault.Assets.csproj" />
        <ProjectReference Include="..\..\..\src\engine\AterraCore.OmniVault.Textures\AterraCore.OmniVault.Textures.csproj" />
        <ProjectReference Include="..\..\..\src\engine\pluginlib\AterraLib\AterraLib.csproj" />
        <ProjectReference Include="..\..\..\tools\Analyzers\AterraEngine.Analyzers\AterraEngine.Analyzers.csproj">
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
            <OutputItemType>Analyzer</OutputItemType>
        </ProjectReference>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="CodeOfChaos.Extensions" Version="0.7.0" />
        <PackageReference Include="CodeOfChaos.Extensions.DependencyInjection" Version="0.1.1"/>
        <PackageReference Include="CodeOfChaos.Extensions.Serilog" Version="0.4.0" />
        <PackageReference Include="JetBrains.Annotations" Version="2024.2.0"/>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0"/>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.1"/>
        <PackageReference Include="Microsoft.Extensions.ObjectPool.DependencyInjection" Version="8.8.0"/>
        <PackageReference Include="Ulid" Version="1.3.4"/>
    </ItemGroup>
    
    <ItemGroup>
        <ResFiles Include=".\Resources\*.*"/>
        <Content Include="@(ResFiles)">
            <Link>Resources\%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>


    <Target Name="PackingToZip" AfterTargets="Build">
        <!-- Delete the existing zip file if it exists -->
        <!--    Else it is going to cause issues for the Wip down below -->
        <Delete Files="$(OutDir)\package\$(MSBuildProjectName).zip" ContinueOnError="true"/>

        <!-- Create directories needed -->
        <MakeDir Directories="$(OutDir)\temp"/>
        <MakeDir Directories="$(OutDir)\temp\resources"/>
        <MakeDir Directories="$(OutDir)\temp\bin"/>
        <MakeDir Directories="$(OutDir)\package"/>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
        <!-- Copy necessary files to temp directory -->
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->

        <!-- Bin - dll files -->
        <ItemGroup>
            <!-- Default dll of the project -->
            <DllFiles Include="$(OutDir)\$(MSBuildProjectName).dll"/>
            <!-- Add more dlls when needed -->

        </ItemGroup>
        <Copy SourceFiles="@(DllFiles)" DestinationFiles="@(DllFiles->'$(OutDir)\temp\bin\%(Filename)%(Extension)')"/>

        <!-- Resources -->
        <ItemGroup>
            <!-- Add more a when needed -->
            <ResourceFiles Include="$(OutDir)\Resources\*.*"/>
            <!--  -->
        </ItemGroup>
        <Copy SourceFiles="@(ResourceFiles)" DestinationFiles="@(ResourceFiles->'$(OutDir)\temp\resources\%(Filename)%(Extension)')"/>
        
        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->

        <ItemGroup>
            <ConfigFiles Include="plugin-config.xml"/>
        </ItemGroup>
        <!-- Copy config files to output directory -->
        <Copy SourceFiles="@(ConfigFiles)" DestinationFiles="@(ConfigFiles->'$(OutDir)\temp\%(Filename)%(Extension)')"/>

        <!-- Zip temp directory contents -->
        <ZipDirectory SourceDirectory="$(OutDir)\temp"
                      DestinationFile="$(OutDir)\package\$(MSBuildProjectName).zip"/>

        <!-- Optionally, delete temp directory -->
        <!--        <RemoveDir Directories="$(OutDir)\temp"/>-->
    </Target>

</Project>
